<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Tmux</title>
    <url>/29b26b27.html</url>
    <content><![CDATA[<ol>
<li>tmux教程</li>
</ol>
<p>功能：<br>    (1) 分屏。<br>    (2) 允许断开Terminal连接后，继续运行进程。<br>结构：<br>    一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane。<br>    <span id="more"></span><br>    实例：<br>        tmux:<br>            session 0:<br>                window 0:<br>                    pane 0<br>                    pane 1<br>                    pane 2<br>                    …<br>                window 1<br>                window 2<br>                …<br>            session 1<br>            session 2<br>            …</p>
<p>操作：<br>    (1) tmux：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。<br>    (2) 按下Ctrl + a后手指松开，然后按%：将当前pane左右平分成两个pane。<br>    (3) 按下Ctrl + a后手指松开，然后按”（注意是双引号”）：将当前pane上下平分成两个pane。<br>    (4) Ctrl + d：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。<br>    (5) 鼠标点击可以选pane。<br>    (6) 按下ctrl + a后手指松开，然后按方向键：选择相邻的pane。<br>    (7) 鼠标拖动pane之间的分割线，可以调整分割线的位置。<br>    (8) 按住ctrl + a的同时按方向键，可以调整pane之间分割线的位置。<br>    (9) 按下ctrl + a后手指松开，然后按z：将当前pane全屏&#x2F;取消全屏。<br>    (10) 按下ctrl + a后手指松开，然后按d：挂起当前session。<br>    (11) tmux a：打开之前挂起的session。<br>    (12) 按下ctrl + a后手指松开，然后按s：选择其它session。<br>        方向键 —— 上：选择上一项 session&#x2F;window&#x2F;pane<br>        方向键 —— 下：选择下一项 session&#x2F;window&#x2F;pane<br>        方向键 —— 右：展开当前项 session&#x2F;window<br>        方向键 —— 左：闭合当前项 session&#x2F;window<br>    (13) 按下Ctrl + a后手指松开，然后按c：在当前session中创建一个新的window。<br>    (14) 按下Ctrl + a后手指松开，然后按w：选择其他window，操作方法与(12)完全相同。<br>    (15) 按下Ctrl + a后手指松开，然后按PageUp：翻阅当前pane内的内容。<br>    (16) 鼠标滚轮：翻阅当前pane内的内容。<br>    (17) 在tmux中选中文本时，需要按住shift键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大）<br>    (18) tmux中复制&#x2F;粘贴文本的通用方式：<br>        (1) 按下Ctrl + a后松开手指，然后按[<br>        (2) 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板<br>        (3) 按下Ctrl + a后松开手指，然后按]，会将剪贴板中的内容粘贴到光标处</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Kit</tag>
        <tag>Usefull</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim Kit</title>
    <url>/ac9a4649.html</url>
    <content><![CDATA[<p>&lt;&gt;<br>如果是新手 vim 使用者，最好在阅读完本文，熟练操作以后，再浏览上述的几篇文章，相对好理解些，也可以加深对 vim 的一些认识，上面我还贴了一篇 tmux 的文章，它简单易学，同 vim 搭配使用，真的很方便，高效。</p>
<p>如果文章有表述不当的地方可以留言指正，互相学习，共同进步 。</p>
<p>认识 VIM<br>刚开始用 VIM 打开文件的时候，需要从宏观的去了解一下 VIM 这个编辑器。</p>
<span id="more"></span>

<p>VIM 常用的有四个模式，：</p>
<p>正常模式 (Normal-mode)<br>插入模式 (Insert-mode)<br>命令模式 (Command-mode)<br>可视模式 (Visual-mode)</p>
<p>什么是正常模式（Normal-mode) ？</p>
<p>正常模式一般用于浏览文件，也包括一些复制、粘贴、删除等操作。这时击键时，一些组合键就是 vim 的功能键，而不会在文本中键入对应的字符。</p>
<p>在这个模式下，我们可以通过键盘在文本中快速移动光标，光标范围从小到大是字符、单词、行、句子、段落和屏幕。启动 VIM 后默认位于正常模式。不论是什么模式，按一下 <Esc> 键 ( 有时可能需要按两下，插入模式按一下 Esc ，就会切换到正常模式，命令模式或者可视模式下执行完操作以后，就会自动进入正常模式，如果进入命令模式或者可视模式没有执行任何操作，按两下 Esc 即可 ）都会进入正常模式。</p>
<p>下面的三个模式都是过键盘上相应的键位去触发的。</p>
<p>什么是插入模式？（Insert-mode)</p>
<p>在正常模式中按下个别字母键（后面会详细介绍），会进入插入模式。</p>
<p>例如按 i 键会进行插入模式。该模式启动以后，就会进入编辑状态，通过键盘输入内容。</p>
<p>什么是命令模式（Command-mode)</p>
<p>在正常模式中，按下：（冒号）键或者&#x2F; （斜杠），会进入命令模式。在命令模式中可以执行一些输入并执行一些 VIM 或插件提供的指令，就像在shell里一样。这些指令包括设置环境、文件操作、调用某个功能等等。</p>
<p>什么是可视模式（Visual-mode）</p>
<p>在正常模式按下v, V, <Ctrl>+v，可以进入可视模式。可视模式中的操作有点像拿鼠标进行操作，选择文本的时候有一种鼠标选择的即视感，有时候会很方便。</p>
<p>以上是关于 VIM 四种模式的解读，我们在使用 VIM 操作文本的时候，编辑区底部一般都会显示当前处于什么模式下（插入模式会有 INSERT 提示，可视模式会有 VISUAL 或者 VISUAL LINE 的提示）。</p>
<p>当对 VIM 有了感觉之后 ，个人认为 VIM 只有两个模式，便于理解（纯个人见解，用熟 VIM 以后，应该会赞同这个理解）：</p>
<p>操作模式<br>编辑模式<br>一个好的编辑器我们无非就使用它的两个功能：</p>
<p>1、通过一些快捷键操作编辑器实现我们的功能：复制，黏贴，删除，查询。。。等</p>
<p>2、我们用来编辑，输入内容进入编辑器。</p>
<p>VIM 有一个很重要的按键需要一开始就做出说明，那就是键盘中的 <ESC> ,这个按键用来切换模式，该按键可以快速切换到正常模式.</p>
<p><ESC> 这个按键有点特殊，它脱离了主键盘区，每次操作这个按键的时候都会有些蛮烦。估计很多使用 VIM 的人都会有这个痛点，因此有了一个解决方案，control + [ 这两个按键取代 <ESC>。</p>
<p>曾经很长一段时间我都是用 control + [ 用来取代 <ESC> ，但是还是感觉有些难受？</p>
<p>VIM 有一个配置文件，在 linux 系统中，该配置文件是 .vimrc , 该文件位于 ～ 目录下面 （～ 目录是家目录，也就是用户目录，不了解的可以科学上网查询），是一个隐藏文件，如果该文件不存在可以手动创建一个。</p>
<p>.vimrc 可以有很多配置，例如显示行号，快捷键配置，插件配置等等。VIM 很多个性化的设置都离不开这个配置文件。zempty 认为 .vimrc 有一个特别重要的配置，那就是配置如下的一行：</p>
<p>#将ESC键映射为两次j键<br>inoremap jj <Esc><br>这个配置是将 <ESC> 功能键用 jj (连续按两次 j) 来取代。这个配置可以很大程度提高 VIM 的使用效率，下文的讲解 zempty 都会用 jj 来取代键盘上的 <ESC>。</p>
<p>用 VIM 打开文件</p>
<p>如何用 VIM 去打开一个文件呢？</p>
<p>现在假如有一个文件 file1 ,只需要在文件前面加上 vim 关键字就好：</p>
<p>vim file1</p>
<p>上面这个命令将会打开 file1 这个文件，file1 是指你具体操作的文件名。</p>
<p>如何用 VIM 一次性打开多个文件呢？</p>
<p>现在有多个文件 file1 ，file2 , … ,filen.</p>
<p>现在举例打开两个文件 file1，file2</p>
<p>vim file1 file2</p>
<p>该方式打开文件，显示屏默认显示第一个文件也就是 file1，如何进行文件间的切换呢？VIM 的正常模式下（参考上文关于正常模式的描述）按下键盘上的冒号 ：这时会在显示屏底部出现冒号 ：（进入了 VIM 的命令模式），然后在输入 ls ，屏幕上会出现打开的所有文件的序号和文件名，我们继续输入冒号 ： ，然后输入 bn (这里的 n需要做一个解释并不是键盘上的 n ,而是文件序号的代指，如 b1 代表显示屏上切换到第一个文件，b2 代表显示屏上切换到第二个文件)。</p>
<p>:ls</p>
<p>上面这个命令将会列出 VIM 打开的所有文件。</p>
<p>:b2</p>
<p>上面的这个命令将会在显示屏上显示第二个文件。</p>
<p>如何在显示屏上一次性显示多个文件呢？</p>
<p>VIM 可以实现分屏操作，一个屏幕被多个文件给分占，有左右和上下两种分屏的方式。</p>
<p>左右分屏如下操作：</p>
<p>vim -On file1 file2 … filen</p>
<p>这里的 n （ n 是要打开的具体文件的数目：1,2,3 …）是代表有几个文件需要分屏，从左至右依次显示 n 个文件。</p>
<p>上下分屏如下操作：</p>
<p>vim -on file1 file2 … filen</p>
<p>这个命令跟上一个命令不同的是其中的参数 -on（ n 是要打开的具体文件的数目：1,2,3 …） 中的 o 是小写，这样将会上下依次显示 n 个文件。</p>
<p>VIM 如何进行分屏操作呢？</p>
<p>请记住一个重要的组合键 Ctrl + w ,操作分屏离不开这个组合键(这里的组合键可没有 + ，只是 Ctrl 和 w 组合实现一个动能,下文谈到的组合健都这样描述 )。</p>
<p>按住组合键 Ctrl + w ，然后在按下 s</p>
<p>Ctrl + w s</p>
<p>上面这个命令将会上下分割当前打开的文件。</p>
<p>按住冒号：，紧接着输入 sp ,在键入文件名，如下：</p>
<p>:sp file</p>
<p>上面的这个命令将会上下分割当前文件和新打开的 file 。</p>
<p>按住组合键 Ctrl + w ,然后在按下 v</p>
<p>Ctrl +w v</p>
<p>上面的这个命令将会左右分割当前的文件</p>
<p>按住冒号 ：，紧接着输入 vsp ,在键入文件名称，如下：</p>
<p>:vsp file</p>
<p>上面的这个命令将会左右分割当前打开的文件和新打开的文件 file 。</p>
<p>分屏以后如何在文件间切换光标，和移动分屏？</p>
<p>1.切换左右分屏的光标 ：</p>
<p>Ctrl + w h</p>
<p>将当前光标定位到左边的屏幕</p>
<p>Ctrl + w l</p>
<p>将当前的光标定位到右边的屏幕</p>
<p>2.移动左右分屏 ：</p>
<p>Ctrl + w H</p>
<p>将当前的分屏移动到左边</p>
<p>Ctrl + w L</p>
<p>将当前的分屏移动到右边</p>
<p>3.切换上下分屏的光标 ：</p>
<p>Ctrl + w j</p>
<p>将当前的光标移动到下面的分屏</p>
<p>Ctrl + w k</p>
<p>将当前光标移动到上面的分屏</p>
<p>4.移动上下分屏：</p>
<p>Ctrl + w J</p>
<p>将当前的分屏移动到下面的分屏</p>
<p>Ctrl + w K</p>
<p>将当前的分屏移动到上面的分屏</p>
<p>如何关闭分屏呢？</p>
<p>Ctrl + w c</p>
<p>上面这个命令是关闭当前的分屏</p>
<p>Ctrl + w q</p>
<p>上面的这个命令也是关闭当前的分屏，如果是最后一个分屏将会退出 VIM 。</p>
<p>VIM 的退出</p>
<p>VIM 的最终操作就是 VIM 的退出，如何进行 VIM 的有效退出呢？下面针对 VIM 的退出来做一下说明：</p>
<p>:w</p>
<p>保存当前对文件的修改，但是不退出文件。</p>
<p>:w!</p>
<p>强制保存但是不退出文件。</p>
<p>:w file</p>
<p>保存当前的文件修改到 file 文件当中。</p>
<p>:q!</p>
<p>退出文件，对文件的修改不做保存。</p>
<p>:qa!</p>
<p>退出所有的文件，对所有的文件修改都不做保存。</p>
<p>:wq</p>
<p>退出文件并保存对文件的修改。</p>
<p>:x</p>
<p>退出文件并保存对文件的修改。</p>
<p>:e file</p>
<p>打开另一个文件。</p>
<p>:e!</p>
<p>放弃对文件的所有修改，恢复文件到上次保存的位置。</p>
<p>:saveas file</p>
<p>另存为 file。</p>
<p>:bn 和 :bp</p>
<p>当打开多个文件的时候可以输入 :bn 和 :bp 进行上一个文件或者下一个文件的切换。</p>
<p>以上的命令都是在命令行模式下的操作（也就是输入冒号 ：紧接着输入相应的字符命令如 :q! 就会执行退出操作）。 zempty 在这里要推荐一个常用的操作就是 ZZ , 当你对文件进行了修改，需要保存退出，那么可以在键盘上快速的键入两个大写的 Z (ZZ),这样文件就会快速的保存退出了 。</p>
<p>VIM 的输入模式</p>
<p>编辑器的主要功能就是输入文本，编辑文本，很多编辑器在打开文件的时候就可以通过键盘录入文字，但是 VIM 有稍许的不同，刚刚接触 VIM 的时候是很难对 VIM 进行编辑操作的，记得我在刚接触它的时候是很崩溃的（千万个草泥马在内心奔腾），但是你接触久了，了解的多了，也就理解如此设计的美妙之处。</p>
<p>如何使用 VIM 编辑文本？</p>
<p>这里有必要再强调一下，在使用 VIM 打开文件的时候，这时候的状态是正常模式（Normal-mode）,请务必记住这个模式，如果你不确定当前是否处在正常模式，请连续按两下键盘上的 jj (这个 jj 需要读者去做相应的配置，上文有做过讲解)，VIM 处理编辑文本需要从正常模式(Normal)切换到插入模式(Insert-mode),进入插入模式的时候你应该会在屏幕底部看到 INSERT 的提示，这时候就可以编辑文本了。</p>
<p>如何从正常模式进入插入模式呢？</p>
<p>请记住下面几个常用启动录入文本的键盘字符 i,I,a,A,o,O,s,S 。</p>
<p>i是在光标所在的字符之前插入需要录入的文本。</p>
<p>I 是在光标所在行的行首插入需要录入的文本。</p>
<p>a 是在光标所在的字符之后插入需要录入的文本。</p>
<p>A 是在光标所在行的行尾插入需要录入的文本。</p>
<p>o 是光标所在行的下一行行首插入需要录入的文本。</p>
<p>O 是光标所在行的上一行行首插入需要录入的文本。</p>
<p>s 删除光标所在处的字符然后插入需要录入的文本。</p>
<p>S 删除光标所在行，在当前行的行首开始插入需要录入的文本。</p>
<p>还有一个可能经常用到的就是 cw ，删除从光标处开始到该单词结束的所有字符，然后插入需要录入的文本（这个命令是两个字符的合体 cw ）。</p>
<p>VIM 的命令模式</p>
<p>关于命令模式上文有提到过，下面主要来列举几个常用的命令模式操作（命令输入完以后，需要按下 Enter 键去执行命令）：</p>
<p>文本的行号设置最好不要设置在配置文件中（因为复制文件的时候行号的出现会很麻烦），在命令行实现就好。</p>
<p>:set nu</p>
<p>该命令会显示行号。</p>
<p>:set nonu</p>
<p>该命令会取消行号。</p>
<p>:n</p>
<p>定位到 n 行。</p>
<p>VIM 进行关键字的查找。</p>
<p>&#x2F;{目标字符串}</p>
<p>如：&#x2F;zempty 会在文本中匹配 zempty 的地方高亮。</p>
<p>查找文本中匹配的目标字符串，查到以后，输入键盘上的 n 会去寻找下一个匹配，N 会去寻找上一个匹配。</p>
<p>VIM 处理大小写的区分</p>
<p>:set ic</p>
<p>编辑器将不会区分大小写，如果你进行该设置之后，进行关键字查询如 &#x2F;zempty 如果文本中有 Zempty ,zEmpty,….,只要是字符相同不会区分大小写都会进行匹配。</p>
<p>:set noic</p>
<p>该命令用来区分大小写的查询。</p>
<p>VIM 删除多行文本</p>
<p>:n1,n2d</p>
<p>n1 和 n2 指的是起始行号和结束行号，d 是删除关键字</p>
<p>VIM 处理文本的替换</p>
<p>:{作用范围}s&#x2F;{目标}&#x2F;{替换}&#x2F;{替换的标志}</p>
<p>作用范围分为当前行、全文、选区等等。</p>
<p>:s&#x2F;zempty&#x2F;handsome&#x2F;g</p>
<p>将会把当前光标所在行的 zempty 替换成 handsome</p>
<p>:%s&#x2F;zempty&#x2F;handsome&#x2F;g</p>
<p>将会把全文中的 zempty 替换成 handsome</p>
<p>:n1,n2s&#x2F;zempty&#x2F;handsome&#x2F;g</p>
<p>这里的 n1 和 n2 值得是行号，将会替换掉 n1 到 n2 的所有 zempty 为 handsome.</p>
<p>选区，在可视模式下选择区域后输入 : ，VIM 会自动补全为 :’&lt;,’&gt;。</p>
<p>:’&lt;,’&gt;s&#x2F;zempty&#x2F;handsome&#x2F;g</p>
<p>这个操作咋一看起来有点懵逼，这个操作是可视模式 (Visual-mode) 下选区中的替换操作（可视模式下文会谈到），可视模式下输入：会自动补全 :’&lt;,’&gt; 这个是可视范围下的操作范围，类似于 % 和 n1,n2，代表操作的文本范围，上面的例子就是替换掉可视区域的 zempty 为 handsome。</p>
<p>下面来谈谈替换的标志。</p>
<p>上文中命令结尾的 g 即是替换标志之一，表示全局 global 替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：</p>
<p>空替换标志表示只替换从光标位置开始，目标的第一次出现</p>
<p>:s&#x2F;zempty&#x2F;handsome</p>
<p>作用于当前行，从光标处开始查找替换，仅仅替换第一次匹配 zempty 的地方为handsome 。</p>
<p>:%s&#x2F;zempty&#x2F;handsome</p>
<p>替换掉文件中所有行第一次出现 zempty 的地方为 handsome 。</p>
<p>i 表示大小写不敏感查找，I 表示大小写敏感：</p>
<p>:%s&#x2F;zempty&#x2F;handsome&#x2F;i</p>
<p>替换掉所有行第一个出现 zempty (不区分大小写) 为 handsome 。</p>
<p>:%s&#x2F;zempty&#x2F;handsome&#x2F;gi</p>
<p>替换掉所有行出现 zempty (不区分大小写) 为 handsome 。</p>
<p>c 表示需要确认，例如全局查找”zempty”替换为”handsome”并且需要确认：</p>
<p>:%s&#x2F;zempty&#x2F;handsome&#x2F;gc</p>
<p>VIM 执行 Linux 命令</p>
<p>:!command</p>
<p>: 后面紧跟着 ! ，! 后面紧跟着 linux 命令（ command 指操作 Linux 系统的一系列命令，如创建文件，新建文件夹，查询文件的属性的等），例子如下，</p>
<p>:!date</p>
<p>执行 date 命令显示时间，执行完命令以后按下键盘上的 Enter 就会返回到文件。</p>
<p>VIM 执行命令，并且添加结果至操作文本光标处</p>
<p>:r !command</p>
<p>: 后面紧跟着 r , r 后面是空格，紧接着是 !command( command 解释同上)，例子如下，</p>
<p>:r !date</p>
<p>执行 date 命令显示时间，并且添加命令结果到文本中。</p>
<p>定义快捷键</p>
<p>下面举例说明：</p>
<p>:map ^M I#<ESC></p>
<p>上面的例子也就是通过快捷键 Ctrl + m 在文件光标处所在行的行首插入 # （ # 代表注释）。</p>
<p>: 后面的 map 是关键字 ，后面是 key 和 value 。</p>
<p>key 对应的是 ^M ， 这个 key 需要强调一下 ^M 是 Ctrl + v + m 打出来的（按下这三个键，VIM 会显示成 ^M ）,^M 代表快捷键是Ctrl + m , Ctrl + v + n 就是 ^N ,代表快捷键是 Ctrl + n 。Ctrl + v + x 就是 ^X (这里的 x 是代表 26 个字母中的任意一个) 代表快捷键 Ctrl + x。</p>
<p>value 对应的是 I#<ESC>,表示按下快捷键以后执行的相应操作，I 是切换光标至行首并切换到编辑模式，#是行首输入的内容（ # 是VIM 文件中的注释符号 ），<ESC> 是退出编辑模式。</p>
<p>举例如下：</p>
<p>:map ^D Ahelloworld<ESC>表示在文件的光标所在行的行尾，添加 helloworld 字符串，按住组合键 ctrl + d 就会执行操作。</p>
<p>使用 ab</p>
<p>:ab email <a href="mailto:&#120;&#x78;&#120;&#x78;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;">&#120;&#x78;&#120;&#x78;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>
<p>: 后面的 ab 是关键字 ,该命令执行后，然后切换到编辑模式下,输入 email 会把输入的 email 自动替换成 <a href="mailto:&#120;&#x78;&#x78;&#120;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;">&#120;&#x78;&#x78;&#120;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;</a>。</p>
<p>这个命令主要是处理频繁输入同样的长串字符串。</p>
<p>VIM 的正常模式（Normal-model）</p>
<p>VIM 正常模式下，主要进行的操作有光标的移动，复制文本，删除文本，黏贴文本等。</p>
<p>快速移动光标</p>
<p>几个重要的快捷键</p>
<p>请记住这几个快捷键 h,j,k,l 这几个按键主要是用来快速移动光标的，h 是向左移动光标，l 是向右移动光标，j 是向下移动光标，k 是向上移动光标，h , j , k ,l 在主键盘区完全可以取代键盘上的 ↑ ,↓ ,← , → 的功能。</p>
<p>在当前行上移动光标</p>
<p>0 移动到行头</p>
<p>^ 移动到本行的第一个不是 blank 字符</p>
<p>$ 移动到行尾</p>
<p>g_ 移动到本行最后一个不是 blank 字符的位置</p>
<p>w 光标移动到下一个单词的开头</p>
<p>e 光标移动到下一个单词的结尾</p>
<p>fa 移动到本行下一个为 a 的字符处，fb 移动到下一个为 b 的字符处</p>
<p>nfa 移动到本行光标处开始的第 n 个 字符为 a 的地方（n 是 1，2，3，4 … 数字）</p>
<p>Fa 同 fa 一样，光标移动方向同 fa 相反</p>
<p>nFa 同 nfa 类似，光标移动方向同 nfa相反</p>
<p>ta 移动光标至 a 字符的前一个字符</p>
<p>nta 移动到第二个 a 字符的前一个字符处</p>
<p>Ta 同 ta 移动光标方向相反</p>
<p>nTa 同 nta 移动光标方向相反</p>
<p>; 和, 当使用 f, F, t ,T, 关键字指定字符跳转的时候，使用 ；可以快速跳转到下一个指定的字符，, 是跳到前一个指定的字符</p>
<p>跨行移动光标</p>
<p>nG 光标定位到第 n 行的行首</p>
<p>gg 光标定位到第一行的行首</p>
<p>G 光标定位到最后一行的行首</p>
<p>H 光标定位到当前屏幕的第一行行首</p>
<p>M 光标移动到当前屏幕的中间</p>
<p>L 光标移动到当前屏幕的尾部</p>
<p>zt 把当前行移动到当前屏幕的最上方，也就是第一行</p>
<p>zz 把当前行移动到当前屏幕的中间</p>
<p>zb 把当前行移动到当前屏幕的尾部</p>
<p>% 匹配括号移动，包括 ( , { , [ 需要把光标先移动到括号上</p>
<ul>
<li>和 # 匹配光标当前所在的单词，移动光标到下一个（或者上一个）匹配的单词（ * 是下一个，# 是上一个）</li>
</ul>
<p>翻页操作</p>
<p>ctrl+f 查看下一页内容</p>
<p>ctrl+b 查看上一页内容</p>
<p>VIM 的复制，黏贴 ，删除</p>
<p>三个重要的快捷键 d , y , p</p>
<p>d 是删除的意思，通常搭配一个字符 ( 删除范围 ) 实现删除功能，常用的如下：</p>
<p>dw 删除一个单词</p>
<p>dnw 删除 n 个单词，</p>
<p>dfa 删除光标处到下一个 a 的字符处（ fa 定位光标到 a 处 ）</p>
<p>dnfa 删除光标处到第 n 个 a 的字符处</p>
<p>dd 删除一整行</p>
<p>ndd 删除光标处开始的 n 行</p>
<p>d$ 删除光标到本行的结尾</p>
<p>dH 删除屏幕显示的第一行文本到光标所在的行</p>
<p>dG 删除光标所在行到文本的结束</p>
<p>y 是复制的意思，通常搭配一个字符（复制范围）实现复制的功能，常用的如下：</p>
<p>yw 复制一个单词，还有 ynw</p>
<p>yfa 复制光标到下一个 a 的字符处,还有ynfa</p>
<p>yy 复制一行，还有 nyy</p>
<p>y$ 复制光标到本号的结尾</p>
<p>yH 复制屏幕显示的第一行文本到光标所在的行</p>
<p>yG 复制光标所在行到文本的结束</p>
<p>p ，P是黏贴的意思，当执行完复制或者黏贴的命令以后，VIM 会把文本寄存起来。</p>
<p>p 在光标后开始黏贴</p>
<p>P 大写的 P 光标前开始粘贴</p>
<p>撤销操作和恢复</p>
<p>u 撤销刚才的操作</p>
<p>ctrl + r 恢复撤销操作</p>
<p>删除字符操作和替换</p>
<p>x 删除光标当前所在的字符</p>
<p>r 替换掉光标当前所在的字符</p>
<p>R 替换掉从光标开始以后的所有字符，除非 <ESC > 退出，或者 jj （代替 <ESC> 上文有提到）退出。</p>
<p>大小写转换</p>
<p>~ 将光标下的字母改变大小写<br>3~ 将光标位置开始的3个字母改变其大小写<br>g~~ 改变当前行字母的大小写<br>gUU 将当前行的字母改成大写<br>guu 将当前行的字母全改成小写</p>
<p>3gUU 将从光标开始到下面3行字母改成大写<br>gUw 将光标下的单词改成大写。<br>guw 将光标下的单词改成小写</p>
<p>VIM 的重复命令</p>
<p>. 该命令是重复上一个操作的命令<br>n<command>重复某个命令 n 次，<br>如 10p复制 10 次，10dd 删除十次。</p>
<p>VIM 可视化模式（Visual-mode)</p>
<p>v,V,Ctrl+v </p>
<p>v字符可视化，按下键盘上的v以后，屏幕底部应该会有一个 VISUAl 的提示，操作 h,j,k,l就选中文本，继续按 v 退出可视化模式。</p>
<p>V 行可视化，按下键盘上的 V 以后，屏幕底部应该有一个 VISUAL LINE 的提示，操作 j,k 可以向上或者向下以行为单位选中文本，继续按下 V 退出可视化模式。</p>
<p>Ctrl+v 块状可视化，按下键盘上的 Ctrl+v 以后，屏幕底部应该会有一个提示 VISUALBLOCK ，可以通过 h,j,k,l 块状的操作选择区域，这是很多编辑器都不可以做到的，继续按下 Ctrl+v 会退出可视化模式。</p>
<p>可视化模式下操作文本</p>
<p>可视化模式下选择操作区域以后，<br>按下 d会删除选择的区域，<br>按下 y 会复制选择的区域，按下 p 会黏贴选择的区域。</p>
<p>可视化模式下 v 的特殊操作</p>
<p>当操作的文本光标在 “”，‘’ ，（），{} ，[（双引号，单引号，小括号，大括号，中括号）<br>当中的时候,可以通过 va”选中 ”“ 内的所有内容包括双引号 ，vi” 选中 “” 内的所有内容，不包括 “”。va,vi 会快速选择区域，va 后面会紧跟一个区域结束标志，a 会选中结束符标志，i 就不会。例子如下：</p>
<p>“hello world [VIM is so strong],{we all can master vim skill}”</p>
<p>假设当前光标定位在上面的文本 M 处：<br>va] 操作将会选中以下文本（加粗部分）：<br>“hello world[VIM is so strong],{we all can master vim skill}“<br>vi] 操作将会选中如下的区域，没有包含 []：<br>“hello world [VIM is so strong],{we all can master vim skill}“</p>
<p>块区域下的特殊操作</p>
<p>Ctrl+v 选中块区域以后，按下大写的 I 或者 A 可以在区域的前面或者后面输入内容，按下 jj 或者 <ESC>,可以看到选中的区域前面或者后面会有输入的内容。</p>
<p>VIM 的代码提示功能</p>
<p>在编辑模式下 ，快捷键 Ctrl+n 或者 Ctrl+p 会有代码提示功能，我们可以实现快速录入的效果。</p>
<p>VIM 的宏录制</p>
<p>假设需要操作的文本如下,需要将如下文本的每一行的行首插入入一个 tab 键。</p>
<p>hello<br>hello world<br>hello world , vim<br>宏录制的录制操作</p>
<p>先将光标移动到第一行，在普通模式下按下 q 键（宏录制是 q 键启动的),在按一个 a （字母随意）,表示该宏注册为 a ，按下 I 在行首插入一个 tab 键，按下jj或者 <ESC>退出编辑模式,按下 j 将光标移动到下一行行首，最后按下 q 键完成录制操作（宏录制是 q 键结束的）。<br>总结上面例子的操作流程：<br>q → a → I → tab → jj → j → q<br>上面的例子成功地把在行首插入 tab 的功能录制了下来，那么如何应用到其他行呢？</p>
<p>宏录制的使用</p>
<p>上述的例子，在正常模式下，按 @a执行宏录制的一系列动作，将会在第二行执行插入 tab 。<br>@@ 是对上一次宏使用的重复操作。n@a 就会执行 n 次一系列的动作。使用宏录制可以一次执行一系列的操作，可以针对一些重复度较高的操作进行宏录制。</p>
<p>结束</p>
<p>文章篇幅稍长，看到这里也是挺有耐心的，VIM 的学习重在实践，需要经常复盘，时间久了，也就有了使用 VIM 的技能。文中提到的操作都是 VIM 常用的基本操作，VIM 还可以针对个人需求进行各种插件的安装，针对不同开发语言都有相应的插件支持,学习完本文推荐再看一下这篇文章 关于 vim 你应该理解的几个名词，在此恭喜你入坑 vim, 就到这里了，结束 ！！！</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Kit</tag>
        <tag>Usefull</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown syntax</title>
    <url>/76ebda55.html</url>
    <content><![CDATA[<p>Overview<br>Nearly all Markdown applications support the basic syntax outlined in the original Markdown design document. There are minor variations and discrepancies between Markdown processors — those are noted inline wherever possible.</p>
<span id="more"></span>
<p>Headings<br>To create a heading, add number signs (#) in front of a word or phrase. The number of number signs you use should correspond to the heading level. For example, to create a heading level three (<h3>), use three number signs (e.g., ### My Header).</p>
<p>Markdown	HTML	Rendered Output</p>
<h1 id="Heading-level-1Heading-level-1"><a href="#Heading-level-1Heading-level-1" class="headerlink" title="Heading level 1	Heading level 1"></a>Heading level 1	<h1>Heading level 1</h1></h1><p>Heading level 1</p>
<h2 id="Heading-level-2Heading-level-2"><a href="#Heading-level-2Heading-level-2" class="headerlink" title="Heading level 2	Heading level 2"></a>Heading level 2	<h2>Heading level 2</h2></h2><p>Heading level 2</p>
<h3 id="Heading-level-3Heading-level-3"><a href="#Heading-level-3Heading-level-3" class="headerlink" title="Heading level 3	Heading level 3"></a>Heading level 3	<h3>Heading level 3</h3></h3><p>Heading level 3</p>
<h4 id="Heading-level-4Heading-level-4"><a href="#Heading-level-4Heading-level-4" class="headerlink" title="Heading level 4	Heading level 4"></a>Heading level 4	<h4>Heading level 4</h4></h4><p>Heading level 4</p>
<h5 id="Heading-level-5Heading-level-5"><a href="#Heading-level-5Heading-level-5" class="headerlink" title="Heading level 5	Heading level 5"></a>Heading level 5	<h5>Heading level 5</h5></h5><p>Heading level 5</p>
<h6 id="Heading-level-6Heading-level-6"><a href="#Heading-level-6Heading-level-6" class="headerlink" title="Heading level 6	Heading level 6"></a>Heading level 6	<h6>Heading level 6</h6></h6><p>Heading level 6</p>
<p>Alternate Syntax<br>Alternatively, on the line below the text, add any number of &#x3D;&#x3D; characters for heading level 1 or – characters for heading level 2.</p>
<p>Markdown	HTML	Rendered Output<br>Heading level 1<br>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;	<h1>Heading level 1</h1>	<br>Heading level 1<br>Heading level 2<br>—————	<h2>Heading level 2</h2>	<br>Heading level 2<br>Heading Best Practices<br>Markdown applications don’t agree on how to handle a missing space between the number signs (#) and the heading name. For compatibility, always put a space between the number signs and the heading name.</p>
<p>✅  Do this	❌  Don’t do this</p>
<h1 id="Here’s-a-Heading"><a href="#Here’s-a-Heading" class="headerlink" title="Here’s a Heading"></a>Here’s a Heading</h1><p>#Here’s a Heading<br>You should also put blank lines before and after a heading for compatibility.</p>
<p>✅  Do this	❌  Don’t do this<br>Try to put a blank line before…</p>
<h1 id="Heading"><a href="#Heading" class="headerlink" title="Heading"></a>Heading</h1><p>…and after a heading.	Without blank lines, this might not look right.</p>
<h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading"></a>Heading</h1><p>Don’t do this!<br>Paragraphs<br>To create paragraphs, use a blank line to separate one or more lines of text.</p>
<p>Markdown	HTML	Rendered Output<br>I really like using Markdown.</p>
<p>I think I’ll use it to format all of my documents from now on.	<p>I really like using Markdown.</p></p>
<p>I think I'll use it to format all of my documents from now on.</p>	
I really like using Markdown.

<p>I think I’ll use it to format all of my documents from now on.</p>
<p>Paragraph Best Practices<br>Unless the paragraph is in a list, don’t indent paragraphs with spaces or tabs.</p>
<p> Note: If you need to indent paragraphs in the output, see the section on how to indent (tab).<br>✅  Do this	❌  Don’t do this<br>Don’t put tabs or spaces in front of your paragraphs.</p>
<p>Keep lines left-aligned like this.</p>
<pre><code>This can result in unexpected formatting problems.
</code></pre>
<p>  Don’t add tabs or spaces in front of paragraphs.<br>Line Breaks<br>To create a line break or new line (<br>), end a line with two or more spaces, and then type return.</p>
<p>Markdown	HTML	Rendered Output<br>This is the first line.<br>And this is the second line.	<p>This is the first line.<br><br>And this is the second line.</p>	<br>This is the first line.<br>And this is the second line.</p>
<p>Line Break Best Practices<br>You can use two or more spaces (commonly referred to as “trailing whitespace”) for line breaks in nearly every Markdown application, but it’s controversial. It’s hard to see trailing whitespace in an editor, and many people accidentally or intentionally put two spaces after every sentence. For this reason, you may want to use something other than trailing whitespace for line breaks. If your Markdown application supports HTML, you can use the <br> HTML tag.</p>
<p>For compatibility, use trailing white space or the <br> HTML tag at the end of the line.</p>
<p>There are two other options I don’t recommend using. CommonMark and a few other lightweight markup languages let you type a backslash () at the end of the line, but not all Markdown applications support this, so it isn’t a great option from a compatibility perspective. And at least a couple lightweight markup languages don’t require anything at the end of the line — just type return and they’ll create a line break.</p>
<p>✅  Do this	❌  Don’t do this<br>First line with two spaces after.<br>And the next line.</p>
<p>First line with the HTML tag after.<br><br>And the next line.</p>
<p>First line with a backslash after.<br>And the next line.</p>
<p>First line with nothing after.<br>And the next line.</p>
<p>Emphasis<br>You can add emphasis by making text bold or italic.</p>
<p>Bold<br>To bold text, add two asterisks or underscores before and after a word or phrase. To bold the middle of a word for emphasis, add two asterisks without spaces around the letters.</p>
<p>Markdown	HTML	Rendered Output<br>I just love <strong>bold text</strong>.	I just love <strong>bold text</strong>.	I just love bold text.<br>I just love <strong>bold text</strong>.	I just love <strong>bold text</strong>.	I just love bold text.<br>Love<strong>is</strong>bold	Love<strong>is</strong>bold	Loveisbold<br>Bold Best Practices<br>Markdown applications don’t agree on how to handle underscores in the middle of a word. For compatibility, use asterisks to bold the middle of a word for emphasis.</p>
<p>✅  Do this	❌  Don’t do this<br>Love<strong>is</strong>bold	Love__is__bold<br>Italic<br>To italicize text, add one asterisk or underscore before and after a word or phrase. To italicize the middle of a word for emphasis, add one asterisk without spaces around the letters.</p>
<p>Markdown	HTML	Rendered Output<br>Italicized text is the <em>cat’s meow</em>.	Italicized text is the <em>cat’s meow</em>.	Italicized text is the cat’s meow.<br>Italicized text is the <em>cat’s meow</em>.	Italicized text is the <em>cat’s meow</em>.	Italicized text is the cat’s meow.<br>A<em>cat</em>meow	A<em>cat</em>meow	Acatmeow<br>Italic Best Practices<br>Markdown applications don’t agree on how to handle underscores in the middle of a word. For compatibility, use asterisks to italicize the middle of a word for emphasis.</p>
<p>✅  Do this	❌  Don’t do this<br>A<em>cat</em>meow	A_cat_meow<br>Bold and Italic<br>To emphasize text with bold and italics at the same time, add three asterisks or underscores before and after a word or phrase. To bold and italicize the middle of a word for emphasis, add three asterisks without spaces around the letters.</p>
<p>Markdown	HTML	Rendered Output<br>This text is <em><strong>really important</strong></em>.	This text is <em><strong>really important</strong></em>.	This text is really important.<br>This text is <em><strong>really important</strong></em>.	This text is <em><strong>really important</strong></em>.	This text is really important.<br>This text is <strong><em>really important</em></strong>.	This text is <em><strong>really important</strong></em>.	This text is really important.<br>This text is <strong><em>really important</em></strong>.	This text is <em><strong>really important</strong></em>.	This text is really important.<br>This is really<em><strong>very</strong></em>important text.	This is really<em><strong>very</strong></em>important text.	This is reallyveryimportant text.<br> Note: The order of the em and strong tags might be reversed depending on the Markdown processor you’re using.<br>Bold and Italic Best Practices<br>Markdown applications don’t agree on how to handle underscores in the middle of a word. For compatibility, use asterisks to bold and italicize the middle of a word for emphasis.</p>
<p>✅  Do this	❌  Don’t do this<br>This is really<em><strong>very</strong></em>important text.	This is really___very___important text.<br>Blockquotes<br>To create a blockquote, add a &gt; in front of a paragraph.</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.<br>The rendered output looks like this:</p>
</blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<p>Blockquotes with Multiple Paragraphs<br>Blockquotes can contain multiple paragraphs. Add a &gt; on the blank lines between the paragraphs.</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.<br>The rendered output looks like this:</p>
</blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p>
<p>Nested Blockquotes<br>Blockquotes can be nested. Add a &gt;&gt; in front of the paragraph you want to nest.</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<blockquote>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.<br>The rendered output looks like this:</p>
</blockquote>
</blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p>
<p>Blockquotes with Other Elements<br>Blockquotes can contain other Markdown formatted elements. Not all elements can be used — you’ll need to experiment to see which ones work.</p>
<blockquote>
<h4 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h4><ul>
<li>Revenue was off the chart.</li>
<li>Profits were higher than ever.</li>
</ul>
<p> <em>Everything</em> is going according to <strong>plan</strong>.<br>The rendered output looks like this:</p>
</blockquote>
<p>The quarterly results look great!<br>Revenue was off the chart.<br>Profits were higher than ever.<br>Everything is going according to plan.</p>
<p>Blockquotes Best Practices<br>For compatibility, put blank lines before and after blockquotes.</p>
<p>✅  Do this	❌  Don’t do this<br>Try to put a blank line before…</p>
<blockquote>
<p>This is a blockquote</p>
</blockquote>
<p>…and after a blockquote.	Without blank lines, this might not look right.</p>
<blockquote>
<p>This is a blockquote<br>Don’t do this!<br>Lists<br>You can organize items into ordered and unordered lists.</p>
</blockquote>
<p>Ordered Lists<br>To create an ordered list, add line items with numbers followed by periods. The numbers don’t have to be in numerical order, but the list should start with the number one.</p>
<p>Markdown	HTML	Rendered Output</p>
<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	<ol>  <li>First item</li>
  <li>Second item</li>
  <li>Third item</li>
  <li>Fourth item</li>
</ol>	
First item
Second item
Third item
Fourth item</li>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	<ol>  <li>First item</li>
  <li>Second item</li>
  <li>Third item</li>
  <li>Fourth item</li>
</ol>	
First item
Second item
Third item
Fourth item</li>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	<ol>  <li>First item</li>
  <li>Second item</li>
  <li>Third item</li>
  <li>Fourth item</li>
</ol>	
First item
Second item
Third item
Fourth item</li>
<li>First item</li>
<li>Second item</li>
<li>Third item<ol>
<li>Indented item</li>
<li>Indented item</li>
</ol>
</li>
<li>Fourth item	<ol>  <li>First item</li>
  <li>Second item</li>
  <li>Third item
 <ol>
   <li>Indented item</li>
   <li>Indented item</li>
 </ol>
  </li>
  <li>Fourth item</li>
</ol>	
First item
Second item
Third item
Indented item
Indented item
Fourth item
Ordered List Best Practices
CommonMark and a few other lightweight markup languages let you use a parenthesis ()) as a delimiter (e.g., 1) First item), but not all Markdown applications support this, so it isn’t a great option from a compatibility perspective. For compatibility, use periods only.</li>
</ol>
<p>✅  Do this	❌  Don’t do this</p>
<ol>
<li>First item</li>
<li>Second item	1) First item</li>
</ol>
<ol start="2">
<li>Second item<br>Unordered Lists<br>To create an unordered list, add dashes (-), asterisks (*), or plus signs (+) in front of line items. Indent one or more items to create a nested list.</li>
</ol>
<p>Markdown	HTML	Rendered Output</p>
<ul>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	<ul><li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item</li>
</ul>	
First item
Second item
Third item
Fourth item</li>
</ul>
<ul>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	<ul><li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item</li>
</ul>	
First item
Second item
Third item
Fourth item</li>
</ul>
<ul>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	<ul><li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item</li>
</ul>	
First item
Second item
Third item
Fourth item</li>
</ul>
<ul>
<li>First item</li>
<li>Second item</li>
<li>Third item<ul>
<li>Indented item</li>
<li>Indented item</li>
</ul>
</li>
<li>Fourth item	<ul><li>First item</li>
<li>Second item</li>
<li>Third item
  <ul>
    <li>Indented item</li>
    <li>Indented item</li>
  </ul>
</li>
<li>Fourth item</li>
</ul>	
First item
Second item
Third item
Indented item
Indented item
Fourth item
Starting Unordered List Items With Numbers
If you need to start an unordered list item with a number followed by a period, you can use a backslash (\) to escape the period.</li>
</ul>
<p>Markdown	HTML	Rendered Output</p>
<ul>
<li>1968. A great year!</li>
<li>I think 1969 was second best.	<ul><li>1968. A great year!</li>
<li>I think 1969 was second best.</li>
</ul></li>
</ul>
<p>	<br>1968. A great year!<br>I think 1969 was second best.<br>Unordered List Best Practices<br>Markdown applications don’t agree on how to handle different delimiters in the same list. For compatibility, don’t mix and match delimiters in the same list — pick one and stick with it.</p>
<p>✅  Do this	❌  Don’t do this</p>
<ul>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item	+ First item</li>
</ul>
<ul>
<li>Second item</li>
</ul>
<ul>
<li>Third item</li>
</ul>
<ul>
<li>Fourth item<br>Adding Elements in Lists<br>To add another element in a list while preserving the continuity of the list, indent the element four spaces or one tab, as shown in the following examples.</li>
</ul>
<p> Tip: If things don’t appear the way you expect, double check that you’ve indented the elements in the list four spaces or one tab.<br>Paragraphs</p>
<ul>
<li><p>This is the first list item.</p>
</li>
<li><p>Here’s the second list item.</p>
<p>  I need to add another paragraph below the second list item.</p>
</li>
<li><p>And here’s the third list item.<br>The rendered output looks like this:</p>
</li>
</ul>
<p>This is the first list item.<br>Here’s the second list item.</p>
<p>I need to add another paragraph below the second list item.</p>
<p>And here’s the third list item.<br>Blockquotes</p>
<ul>
<li><p>This is the first list item.</p>
</li>
<li><p>Here’s the second list item.</p>
<blockquote>
<p>A blockquote would look great below the second list item.</p>
</blockquote>
</li>
<li><p>And here’s the third list item.<br>The rendered output looks like this:</p>
</li>
</ul>
<p>This is the first list item.<br>Here’s the second list item.</p>
<p>A blockquote would look great below the second list item.</p>
<p>And here’s the third list item.<br>Code Blocks<br>Code blocks are normally indented four spaces or one tab. When they’re in a list, indent them eight spaces or two tabs.</p>
<ol>
<li><p>Open the file.</p>
</li>
<li><p>Find the following code block on line 21:</p>
<pre><code> &lt;html&gt;
   &lt;head&gt;
     &lt;title&gt;Test&lt;/title&gt;
   &lt;/head&gt;
</code></pre>
</li>
<li><p>Update the title to match the name of your website.<br>The rendered output looks like this:</p>
</li>
</ol>
<p>Open the file.<br>Find the following code block on line 21:</p>
 <html>
   <head>
     <title>Test</title>
   </head>
Update the title to match the name of your website.
Images
1. Open the file containing the Linux mascot.
2. Marvel at its beauty.

<pre><code>![Tux, the Linux mascot](/assets/images/tux.png)
</code></pre>
<ol start="3">
<li>Close the file.<br>The rendered output looks like this:</li>
</ol>
<p>Open the file containing the Linux mascot.<br>Marvel at its beauty.</p>
<p>Tux, the Linux mascot</p>
<p>Close the file.<br>Lists<br>You can nest an unordered list in an ordered list, or vice versa.</p>
<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item<ul>
<li>Indented item</li>
<li>Indented item</li>
</ul>
</li>
<li>Fourth item<br>The rendered output looks like this:</li>
</ol>
<p>First item<br>Second item<br>Third item<br>Indented item<br>Indented item<br>Fourth item<br>Code<br>To denote a word or phrase as code, enclose it in backticks (&#96;).</p>
<p>Markdown	HTML	Rendered Output<br>At the command prompt, type <code>nano</code>.	At the command prompt, type <code>nano</code>.	At the command prompt, type nano.<br>Escaping Backticks<br>If the word or phrase you want to denote as code includes one or more backticks, you can escape it by enclosing the word or phrase in double backticks (&#96;&#96;).</p>
<p>Markdown	HTML	Rendered Output<br><code>Use `code` in your Markdown file.</code>	<code>Use <code>code</code> in your Markdown file.</code>	Use <code>code</code> in your Markdown file.<br>Code Blocks<br>To create code blocks, indent every line of the block by at least four spaces or one tab.</p>
<pre><code>&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
&lt;/html&gt;
</code></pre>
<p>The rendered output looks like this:</p>
<html>
  <head>
  </head>
</html>
 Note: To create code blocks without indenting lines, use fenced code blocks.
Horizontal Rules
To create a horizontal rule, use three or more asterisks (***), dashes (---), or underscores (___) on a line by themselves.

<hr>
<hr>
<hr>
<p>The rendered output of all three looks identical:</p>
<p>Horizontal Rule Best Practices<br>For compatibility, put blank lines before and after horizontal rules.</p>
<p>✅  Do this	❌  Don’t do this<br>Try to put a blank line before…</p>
<hr>
<h2 id="…and-after-a-horizontal-rule-Without-blank-lines-this-would-be-a-heading"><a href="#…and-after-a-horizontal-rule-Without-blank-lines-this-would-be-a-heading" class="headerlink" title="…and after a horizontal rule.	Without blank lines, this would be a heading."></a>…and after a horizontal rule.	Without blank lines, this would be a heading.</h2><p>Don’t do this!<br>Links<br>To create a link, enclose the link text in brackets (e.g., [Duck Duck Go]) and then follow it immediately with the URL in parentheses (e.g., (<a href="https://duckduckgo.com/">https://duckduckgo.com</a>)).</p>
<p>My favorite search engine is <a href="https://duckduckgo.com/">Duck Duck Go</a>.<br>The rendered output looks like this:</p>
<p>My favorite search engine is Duck Duck Go.</p>
<p> Note: To link to an element on the same page, see linking to heading IDs. To create a link that opens in a new tab or window, see the section on link targets.<br>Adding Titles<br>You can optionally add a title for a link. This will appear as a tooltip when the user hovers over the link. To add a title, enclose it in quotation marks after the URL.</p>
<p>My favorite search engine is <a href="https://duckduckgo.com/" title="The best search engine for privacy">Duck Duck Go</a>.<br>The rendered output looks like this:</p>
<p>My favorite search engine is Duck Duck Go.</p>
<p>URLs and Email Addresses<br>To quickly turn a URL or email address into a link, enclose it in angle brackets.</p>
<p><a href="https://www.markdownguide.org/">https://www.markdownguide.org</a><br><a href="mailto:&#x66;&#x61;&#x6b;&#x65;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#x63;&#111;&#x6d;">&#x66;&#x61;&#x6b;&#x65;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#x63;&#111;&#x6d;</a><br>The rendered output looks like this:</p>
<p><a href="https://www.markdownguide.org/">https://www.markdownguide.org</a><br><a href="mailto:&#x66;&#97;&#107;&#101;&#64;&#x65;&#x78;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;">&#x66;&#97;&#107;&#101;&#64;&#x65;&#x78;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;</a></p>
<p>Formatting Links<br>To emphasize links, add asterisks before and after the brackets and parentheses. To denote links as code, add backticks in the brackets.</p>
<p>I love supporting the <strong><a href="https://eff.org/">EFF</a></strong>.<br>This is the <em><a href="https://www.markdownguide.org/">Markdown Guide</a></em>.<br>See the section on <a href="#code"><code>code</code></a>.<br>The rendered output looks like this:</p>
<p>I love supporting the EFF.<br>This is the Markdown Guide.<br>See the section on code.</p>
<p>Reference-style Links<br>Reference-style links are a special kind of link that make URLs easier to display and read in Markdown. Reference-style links are constructed in two parts: the part you keep inline with your text and the part you store somewhere else in the file to keep the text easy to read.</p>
<p>Formatting the First Part of the Link<br>The first part of a reference-style link is formatted with two sets of brackets. The first set of brackets surrounds the text that should appear linked. The second set of brackets displays a label used to point to the link you’re storing elsewhere in your document.</p>
<p>Although not required, you can include a space between the first and second set of brackets. The label in the second set of brackets is not case sensitive and can include letters, numbers, spaces, or punctuation.</p>
<p>This means the following example formats are roughly equivalent for the first part of the link:</p>
<p><a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">hobbit-hole</a><br>[hobbit-hole] <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">1</a><br>Formatting the Second Part of the Link<br>The second part of a reference-style link is formatted with the following attributes:</p>
<p>The label, in brackets, followed immediately by a colon and at least one space (e.g., [label]: ).<br>The URL for the link, which you can optionally enclose in angle brackets.<br>The optional title for the link, which you can enclose in double quotes, single quotes, or parentheses.<br>This means the following example formats are all roughly equivalent for the second part of the link:</p>
<p>You can place this second part of the link anywhere in your Markdown document. Some people place them immediately after the paragraph in which they appear while other people place them at the end of the document (like endnotes or footnotes).</p>
<p>An Example Putting the Parts Together<br>Say you add a URL as a standard URL link to a paragraph and it looks like this in Markdown:</p>
<p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends<br>of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to<br>eat: it was a <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle" title="Hobbit lifestyles">hobbit-hole</a>, and that means comfort.<br>Though it may point to interesting additional information, the URL as displayed really doesn’t add much to the existing raw text other than making it harder to read. To fix that, you could format the URL like this instead:</p>
<p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends<br>of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to<br>eat: it was a <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">hobbit-hole</a>, and that means comfort.</p>
<p>In both instances above, the rendered output would be identical:</p>
<p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a hobbit-hole, and that means comfort.</p>
<p>and the HTML for the link would be:</p>
<p><a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle" title="Hobbit lifestyles">hobbit-hole</a><br>Link Best Practices<br>Markdown applications don’t agree on how to handle spaces in the middle of a URL. For compatibility, try to URL encode any spaces with %20. Alternatively, if your Markdown application supports HTML, you could use the a HTML tag.</p>
<p>✅  Do this	❌  Don’t do this<br><a href="https://www.example.com/my%20great%20page">link</a></p>
<p><a href="https://www.example.com/my great page">link</a></p>
<p>[link](<a href="https://www.example.com/my">https://www.example.com/my</a> great page)</p>
<p>Parentheses in the middle of a URL can also be problematic. For compatibility, try to URL encode the opening parenthesis (() with %28 and the closing parenthesis ()) with %29. Alternatively, if your Markdown application supports HTML, you could use the a HTML tag.</p>
<p>✅  Do this	❌  Don’t do this<br><a href="https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_%28novel%29">a novel</a></p>
<p><a href="https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_(novel)">a novel</a></p>
<p><a href="https://en.wikipedia.org/wiki/The_Milagro_Beanfield_War_(novel)">a novel</a><br>Images<br>To add an image, add an exclamation mark (!), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title in quotation marks after the path or URL.</p>
<p><img src="/assets/images/san-juan-mountains.jpg" alt="The San Juan Mountains are beautiful!" title="San Juan Mountains"><br>The rendered output looks like this:</p>
<p>The San Juan Mountains are beautiful!</p>
<p> Note: To resize an image, see the section on image size. To add a caption, see the section on image captions.<br>Linking Images<br>To add a link to an image, enclose the Markdown for the image in brackets, and then add the link in parentheses.</p>
<p><a href="https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv"><img src="/assets/images/shiprock.jpg" alt="An old rock in the desert" title="Shiprock, New Mexico by Beau Rogers"></a><br>The rendered output looks like this:</p>
<p>An old rock in the desert<br>Escaping Characters<br>To display a literal character that would otherwise be used to format text in a Markdown document, add a backslash () in front of the character.</p>
<p>* Without the backslash, this would be a bullet in an unordered list.<br>The rendered output looks like this:</p>
<ul>
<li>Without the backslash, this would be a bullet in an unordered list.</li>
</ul>
<p>Characters You Can Escape<br>You can use a backslash to escape the following characters.</p>
<p>Character	Name<br>\	backslash<br>&#96;	backtick (see also escaping backticks in code)<br>*	asterisk<br>_	underscore<br>{ }	curly braces<br>[ ]	brackets<br>&lt; &gt;	angle brackets<br>( )	parentheses<br>#	pound sign<br>+	plus sign<br>-	minus sign (hyphen)<br>.	dot<br>!	exclamation mark<br>|	pipe (see also escaping pipe in tables)<br>HTML<br>Many Markdown applications allow you to use HTML tags in Markdown-formatted text. This is helpful if you prefer certain HTML tags to Markdown syntax. For example, some people find it easier to use HTML tags for images. Using HTML is also helpful when you need to change the attributes of an element, like specifying the color of text or changing the width of an image.</p>
<p>To use HTML, place the tags in the text of your Markdown-formatted file.</p>
<p>This <strong>word</strong> is bold. This <em>word</em> is italic.<br>The rendered output looks like this:</p>
<p>This word is bold. This word is italic.</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Writing</tag>
        <tag>Efficiency</tag>
      </tags>
  </entry>
  <entry>
    <title>Common Linux Commands</title>
    <url>/3cffb865.html</url>
    <content><![CDATA[<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><p>ls　　        显示文件或目录<br>     -l           列出文件详细信息l(list)<br>     -a          列出当前目录下所有文件及目录，包括隐藏的a(all)<br>mkdir         创建目录<br>     -p           创建目录，若无父目录，则创建p(parent)</p>
<span id="more"></span>
<p>cd               切换目录<br>touch          创建空文件<br>echo            创建带有内容的文件。<br>cat              查看文件内容<br>cp                拷贝<br>mv               移动或重命名<br>rm               删除文件<br>     -r            递归删除，可删除子目录及文件<br>     -f            强制删除<br>find              在文件系统中搜索某文件<br>wc                统计文本中行数、字数、字符数<br>grep             在文本文件中查找某个字符串<br>rmdir           删除空目录<br>tree             树形结构显示目录，需要安装tree包<br>pwd              显示当前目录<br>ln                  创建链接文件<br>more、less  分页显示文本文件内容<br>head、tail    显示文件头、尾内容<br>ctrl+alt+F1  命令行全屏模式</p>
<h4 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h4><p>stat              显示指定文件的详细信息，比ls更详细<br>who               显示在线登陆用户<br>whoami          显示当前操作用户<br>hostname      显示主机名<br>uname           显示系统信息<br>top                动态显示当前耗费资源最多进程信息<br>ps                  显示瞬间进程状态 ps -aux<br>du                  查看目录大小 du -h &#x2F;home带有单位显示目录信息<br>df                  查看磁盘大小 df -h 带有单位显示磁盘信息<br>ifconfig          查看网络情况<br>ping                测试网络连通<br>netstat          显示网络状态信息<br>man                命令不会用了，找男人  如：man ls<br>clear              清屏<br>alias               对命令重命名 如：alias showmeit&#x3D;”ps -aux” ，另外解除使用unaliax showmeit<br>kill                 杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。
 </p>
<h4 id="打包压缩相关命令"><a href="#打包压缩相关命令" class="headerlink" title="打包压缩相关命令"></a>打包压缩相关命令</h4><p>gzip：<br>bzip2：<br>tar:                打包压缩<br>     -c              归档文件<br>     -x              压缩文件<br>     -z              gzip压缩文件<br>     -j              bzip2压缩文件<br>     -v              显示压缩或解压缩过程 v(view)<br>     -f              使用档名<br>例：<br>tar -cvf &#x2F;home&#x2F;abc.tar &#x2F;home&#x2F;abc              只打包，不压缩<br>tar -zcvf &#x2F;home&#x2F;abc.tar.gz &#x2F;home&#x2F;abc        打包，并用gzip压缩<br>tar -jcvf &#x2F;home&#x2F;abc.tar.bz2 &#x2F;home&#x2F;abc      打包，并用bzip2压缩<br>当然，如果想解压缩，就直接替换上面的命令  tar -cvf  &#x2F; tar -zcvf  &#x2F; tar -jcvf 中的“c” 换成“x” 就可以了。
 </p>
<h4 id="关机-重启机器"><a href="#关机-重启机器" class="headerlink" title="关机&#x2F;重启机器"></a>关机&#x2F;重启机器</h4><p>shutdown<br>     -r             关机重启<br>     -h             关机不重启<br>     now          立刻关机<br>halt               关机<br>reboot          重启
 </p>
<h4 id="Linux管道"><a href="#Linux管道" class="headerlink" title="Linux管道"></a>Linux管道</h4><p>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。<br>例：grep -r “close” &#x2F;home&#x2F;* | more       在home目录下所有文件中查找，包括close的文件，并分页输出。
 </p>
<h4 id="Linux软件包管理"><a href="#Linux软件包管理" class="headerlink" title="Linux软件包管理"></a>Linux软件包管理</h4><p>dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。<br>比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。<br>sudo dpkg -i tree_1.5.3-1_i386.deb         安装软件<br>sudo dpkg -r tree                                     卸载软件<br> <br>注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；<br>APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。<br>依然以tree为例<br>sudo apt-get install tree                         安装tree<br>sudo apt-get remove tree                       卸载tree<br>sudo apt-get update                                 更新软件<br>sudo apt-get upgrade        <br> <br>将.rpm文件转为.deb文件<br>.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。<br>sudo alien abc.rpm
 </p>
<h4 id="vim使用"><a href="#vim使用" class="headerlink" title="vim使用"></a>vim使用</h4><p>vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。<br>命令模式下：<br>:q                      退出<br>:q!                     强制退出<br>:wq                   保存并退出<br>:set number     显示行号<br>:set nonumber  隐藏行号<br>&#x2F;apache            在文档中查找apache 按n跳到下一个，shift+n上一个<br>yyp                   复制光标所在行，并粘贴<br>h(左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)
 </p>
<h4 id="用户及用户组管理"><a href="#用户及用户组管理" class="headerlink" title="用户及用户组管理"></a>用户及用户组管理</h4><p>&#x2F;etc&#x2F;passwd    存储用户账号<br>&#x2F;etc&#x2F;group       存储组账号<br>&#x2F;etc&#x2F;shadow    存储用户账号的密码<br>&#x2F;etc&#x2F;gshadow  存储用户组账号的密码<br>useradd 用户名<br>userdel 用户名<br>adduser 用户名<br>groupadd 组名<br>groupdel 组名<br>passwd root     给root设置密码<br>su root<br>su - root <br>&#x2F;etc&#x2F;profile     系统环境变量<br>bash_profile     用户环境变量<br>.bashrc              用户环境变量<br>su user              切换用户，加载配置文件.bashrc<br>su - user            切换用户，加载配置文件&#x2F;etc&#x2F;profile ，加载bash_profile</p>
<h4 id="更改文件的用户及用户组"><a href="#更改文件的用户及用户组" class="headerlink" title="更改文件的用户及用户组"></a>更改文件的用户及用户组</h4><p>sudo chown [-R] owner[:group] {File|Directory}<br>例如：还以jdk-7u21-linux-i586.tar.gz为例。属于用户hadoop，组hadoop<br>要想切换此文件所属的用户及组。可以使用命令。<br>sudo chown root:root jdk-7u21-linux-i586.tar.gz
 </p>
<h4 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h4><p>三种基本权限<br>R           读         数值表示为4<br>W          写         数值表示为2<br>X           可执行  数值表示为1</p>
<p>如，jdk-7u21-linux-i586.tar.gz文件的权限为-rw-rw-r–<br>-rw-rw-r–一共十个字符，分成四段。<br>第一个字符“-”表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录<br>第二三四个字符“rw-”表示当前所属用户的权限。   所以用数值表示为4+2&#x3D;6<br>第五六七个字符“rw-”表示当前所属组的权限。      所以用数值表示为4+2&#x3D;6<br>第八九十个字符“r–”表示其他用户权限。              所以用数值表示为2<br>所以操作此文件的权限用数值表示为662 </p>
<h4 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h4><p>sudo chmod [u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x]   目录名 <br>例如：有一个文件filename，权限为“-rw-r—-x” ,将权限值改为”-rwxrw-r-x”，用数值表示为765<br>sudo chmod u+x g+w o+r  filename<br>上面的例子可以用数值表示<br>sudo chmod 765 filename</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Efficiency</tag>
        <tag>Kit</tag>
      </tags>
  </entry>
</search>
